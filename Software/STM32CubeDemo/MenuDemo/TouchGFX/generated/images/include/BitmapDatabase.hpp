// Generated by imageconverter. Please, do not edit!

#ifndef TOUCHGFX_BITMAPDATABASE_HPP
#define TOUCHGFX_BITMAPDATABASE_HPP

#include <touchgfx/hal/Types.hpp>
#include <touchgfx/Bitmap.hpp>

const uint16_t BITMAP_BACKGROUND_ID = 0;
const uint16_t BITMAP_COLOR_PALETTE_ID = 1;
const uint16_t BITMAP_COLOR_PALETTE_GREY_ID = 2;
const uint16_t BITMAP_CUBE_ID = 3;
const uint16_t BITMAP_CUBE_GRAY_ID = 4;
const uint16_t BITMAP_ERASER_ID = 5;
const uint16_t BITMAP_ERASER_GRAY_ID = 6;
const uint16_t BITMAP_EYE_DROPPER_ID = 7;
const uint16_t BITMAP_EYE_DROPPER_GRAY_ID = 8;
const uint16_t BITMAP_KNIFE_TOOL_ID = 9;
const uint16_t BITMAP_KNIFE_TOOL_GRAY_ID = 10;
const uint16_t BITMAP_LOGO_DESIGN_ID = 11;
const uint16_t BITMAP_LOGO_DESIGN_GRAY_ID = 12;
const uint16_t BITMAP_PEN_TOOL_ID = 13;
const uint16_t BITMAP_PEN_TOOL_GRAY_ID = 14;
const uint16_t BITMAP_PRINTER_ID = 15;
const uint16_t BITMAP_PRINTER_GRAY_ID = 16;
const uint16_t BITMAP_RULER_ID = 17;
const uint16_t BITMAP_RULER_GRAY_ID = 18;
const uint16_t BITMAP_SHAPES_ID = 19;
const uint16_t BITMAP_SHAPES_GRAY_ID = 20;
const uint16_t BITMAP_SPRAY_PAINT_ID = 21;
const uint16_t BITMAP_SPRAY_PAINT_GRAY_ID = 22;
const uint16_t BITMAP_TRIANGLE_RULER_ID = 23;
const uint16_t BITMAP_TRIANGLE_RULER_GRAY_ID = 24;

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance();
uint16_t getInstanceSize();
} // namespace BitmapDatabase

#endif // TOUCHGFX_BITMAPDATABASE_HPP
