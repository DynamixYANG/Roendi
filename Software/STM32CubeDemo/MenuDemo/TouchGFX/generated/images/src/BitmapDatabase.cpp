// 4.18.0 0x288a8543
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_background[]; // BITMAP_BACKGROUND_ID = 0, Size: 240x240 pixels
extern const unsigned char image_color_palette[]; // BITMAP_COLOR_PALETTE_ID = 1, Size: 50x50 pixels
extern const unsigned char image_color_palette_grey[]; // BITMAP_COLOR_PALETTE_GREY_ID = 2, Size: 70x70 pixels
extern const unsigned char image_cube[]; // BITMAP_CUBE_ID = 3, Size: 50x50 pixels
extern const unsigned char image_cube_gray[]; // BITMAP_CUBE_GRAY_ID = 4, Size: 70x70 pixels
extern const unsigned char image_eraser[]; // BITMAP_ERASER_ID = 5, Size: 50x50 pixels
extern const unsigned char image_eraser_gray[]; // BITMAP_ERASER_GRAY_ID = 6, Size: 70x70 pixels
extern const unsigned char image_eye_dropper[]; // BITMAP_EYE_DROPPER_ID = 7, Size: 50x50 pixels
extern const unsigned char image_eye_dropper_gray[]; // BITMAP_EYE_DROPPER_GRAY_ID = 8, Size: 70x70 pixels
extern const unsigned char image_knife_tool[]; // BITMAP_KNIFE_TOOL_ID = 9, Size: 50x50 pixels
extern const unsigned char image_knife_tool_gray[]; // BITMAP_KNIFE_TOOL_GRAY_ID = 10, Size: 70x70 pixels
extern const unsigned char image_logo_design[]; // BITMAP_LOGO_DESIGN_ID = 11, Size: 50x50 pixels
extern const unsigned char image_logo_design_gray[]; // BITMAP_LOGO_DESIGN_GRAY_ID = 12, Size: 70x70 pixels
extern const unsigned char image_pen_tool[]; // BITMAP_PEN_TOOL_ID = 13, Size: 50x50 pixels
extern const unsigned char image_pen_tool_gray[]; // BITMAP_PEN_TOOL_GRAY_ID = 14, Size: 70x70 pixels
extern const unsigned char image_printer[]; // BITMAP_PRINTER_ID = 15, Size: 50x50 pixels
extern const unsigned char image_printer_gray[]; // BITMAP_PRINTER_GRAY_ID = 16, Size: 70x70 pixels
extern const unsigned char image_ruler[]; // BITMAP_RULER_ID = 17, Size: 50x50 pixels
extern const unsigned char image_ruler_gray[]; // BITMAP_RULER_GRAY_ID = 18, Size: 70x70 pixels
extern const unsigned char image_shapes[]; // BITMAP_SHAPES_ID = 19, Size: 50x50 pixels
extern const unsigned char image_shapes_gray[]; // BITMAP_SHAPES_GRAY_ID = 20, Size: 70x70 pixels
extern const unsigned char image_spray_paint[]; // BITMAP_SPRAY_PAINT_ID = 21, Size: 50x50 pixels
extern const unsigned char image_spray_paint_gray[]; // BITMAP_SPRAY_PAINT_GRAY_ID = 22, Size: 70x70 pixels
extern const unsigned char image_triangle_ruler[]; // BITMAP_TRIANGLE_RULER_ID = 23, Size: 50x50 pixels
extern const unsigned char image_triangle_ruler_gray[]; // BITMAP_TRIANGLE_RULER_GRAY_ID = 24, Size: 70x70 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_background, 0, 240, 240, 0, 0, 240, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 240, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_color_palette, 0, 50, 50, 0, 0, 50, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 50, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_color_palette_grey, 0, 70, 70, 0, 0, 70, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 70, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_cube, 0, 50, 50, 0, 0, 50, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 50, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_cube_gray, 0, 70, 70, 0, 0, 70, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 70, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_eraser, 0, 50, 50, 0, 0, 50, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 50, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_eraser_gray, 0, 70, 70, 0, 0, 70, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 70, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_eye_dropper, 0, 50, 50, 0, 0, 50, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 50, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_eye_dropper_gray, 0, 70, 70, 0, 0, 70, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 70, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_knife_tool, 0, 50, 50, 0, 0, 50, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 50, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_knife_tool_gray, 0, 70, 70, 0, 0, 70, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 70, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_logo_design, 0, 50, 50, 0, 0, 50, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 50, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_logo_design_gray, 0, 70, 70, 0, 0, 70, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 70, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_pen_tool, 0, 50, 50, 0, 0, 50, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 50, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_pen_tool_gray, 0, 70, 70, 0, 0, 70, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 70, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_printer, 0, 50, 50, 0, 0, 50, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 50, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_printer_gray, 0, 70, 70, 0, 0, 70, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 70, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_ruler, 0, 50, 50, 0, 0, 50, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 50, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_ruler_gray, 0, 70, 70, 0, 0, 70, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 70, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_shapes, 0, 50, 50, 0, 0, 50, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 50, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_shapes_gray, 0, 70, 70, 0, 0, 70, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 70, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_spray_paint, 0, 50, 50, 0, 0, 50, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 50, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_spray_paint_gray, 0, 70, 70, 0, 0, 70, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 70, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_triangle_ruler, 0, 50, 50, 0, 0, 50, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 50, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_triangle_ruler_gray, 0, 70, 70, 0, 0, 70, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 70, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
